#!/usr/bin/env php
<?php

use Amp\ByteStream\ResourceInputStream;
use Amp\ByteStream\ResourceOutputStream;
use Ostrolucky\StdinFileServer\Bufferer;
use Ostrolucky\StdinFileServer\ConsoleLogger;
use Ostrolucky\StdinFileServer\Responder;
use Symfony\Component\Console\Helper\DescriptorHelper;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Output\ConsoleOutput;
use Symfony\Component\Console\Style\SymfonyStyle;

require_once __DIR__.'/../vendor/autoload.php';

(new \Symfony\Component\Console\Application())
	->register('stdin-fileserver')
	->setDescription('Serve stdin over HTTP')
	->setCode(function(InputInterface $input, ConsoleOutput $output) {
		if (ftell($stdin = STDIN) === false) {
            (new DescriptorHelper())->describe($output, $this);
            (new SymfonyStyle($input, $output))->error('Please pipe stdin into stdin-fileserver');

            return 1;
		}

        $output = new \Ostrolucky\StdinFileServer\ConsoleOutput($output->getVerbosity());

        $bufferer = new Bufferer(
            $logger = new ConsoleLogger($firstSection = $output->section()),
			new ResourceInputStream($stdin),
			new ResourceOutputStream(tmpfile()),
			$output->section()
		);
        $bufferHandler = \Amp\asyncCoroutine($bufferer);
        $clientHandler = \Amp\asyncCoroutine(new Responder($logger, $bufferer, $output));
	
        Amp\Loop::run(function() use ($clientHandler, $logger, $firstSection, $bufferHandler) {
        	$bufferHandler();
            $server = Amp\socket\listen('127.0.0.1:1337');
            $logger->debug('Listening on port 1337');
            $firstSection->writeln('<info>Open your browser and visit http://' . $server->getAddress().'</info>');
            while ($socket = yield $server->accept()) {
            	$clientHandler($socket);
			}
        });

        return 0;
	})
	->getApplication()
	->setDefaultCommand('stdin-fileserver', true)
	->run()
;
