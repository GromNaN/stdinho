#!/usr/bin/env php
<?php

use Monolog\Formatter\LineFormatter;
use Monolog\Handler\StreamHandler;
use Monolog\Logger;
use Ostrolucky\StdinFileServer\Responder;
use Ostrolucky\StdinFileServer\StdinPersister;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Output\OutputInterface;

require_once __DIR__.'/../vendor/autoload.php';

(new \Symfony\Component\Console\Application())
	->register('stdin-fileserver')
	->setDescription('Serve stdin over HTTP')
	->setCode(function(InputInterface $input, OutputInterface $output) {
		// TODO: Show help instead of throwing exception
		if (ftell(STDIN) === false) {
			throw new \RuntimeException('Please pipe stdin into stdin-fileserver');
		}

		$logger = new Logger('stdin-fileserver');
        $consoleHandler = new StreamHandler(STDERR);
        $consoleHandler->setFormatter($formatter = new LineFormatter("[%datetime%] %message%\n"));
		$stdinPersister = new StdinPersister($logger->pushHandler($consoleHandler));
        $clientHandler = \Amp\asyncCoroutine(new Responder($logger, $stdinPersister->getHandleFilePath()));

        Amp\Loop::onReadable(STDIN, $stdinPersister);
        Amp\Loop::run(function() use ($clientHandler, $output) {
            $server = Amp\socket\listen('127.0.1:1337');
            $output->writeln('Open your browser and visit http://' . $server->getAddress());
            while ($socket = yield $server->accept()) {
            	$clientHandler($socket);
			}
        });
	})
	->getApplication()
	->setDefaultCommand('stdin-fileserver', true)
	->run();